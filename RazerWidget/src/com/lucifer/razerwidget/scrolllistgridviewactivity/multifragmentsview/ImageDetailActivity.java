package com.lucifer.razerwidget.scrolllistgridviewactivity.multifragmentsview;import java.util.ArrayList;import com.lucifer.razerwidget.R;import com.nostra13.universalimageloader.core.DisplayImageOptions;import com.nostra13.universalimageloader.core.ImageLoader;import com.nostra13.universalimageloader.core.ImageLoaderConfiguration;import com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer;import android.app.Activity;import android.os.Bundle;import android.support.v4.view.PagerAdapter;import android.support.v4.view.ViewPager;import android.support.v4.view.ViewPager.OnPageChangeListener;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.ImageView;import android.widget.TextView; public class ImageDetailActivity extends Activity implements OnPageChangeListener{	private ViewPager viewPager;	private TextView pageText;		int currentPosition;		private DisplayImageOptions options;	private ImageLoader imageLoader = ImageLoader.getInstance();	private ArrayList<String> list;		@Override	protected void onCreate(Bundle savedInstanceState)	{		// TODO Auto-generated method stub		super.onCreate(savedInstanceState);		setContentView(R.layout.aty_imagedetail);				currentPosition = getIntent().getIntExtra("position", 123);		list = getIntent().getStringArrayListExtra("list");		initView();	}				private void initView()	{		viewPager = (ViewPager) findViewById(R.id.view_pager);		pageText = (TextView) findViewById(R.id.page_text);				ViewPagerAdapter adapter = new ViewPagerAdapter();		viewPager.setAdapter(adapter);		viewPager.setCurrentItem(currentPosition);		viewPager.setOnPageChangeListener(this);		viewPager.setEnabled(false);		// 设定当前的页数和总页数		pageText.setText((currentPosition + 1) + "/" + list.size());			}						class ViewPagerAdapter extends PagerAdapter	{		public Object instantiateItem(ViewGroup container, int position)		{			String imageUrl = list.get(position);			View view = LayoutInflater.from(ImageDetailActivity.this).inflate(R.layout.item_imageview, null);			ImageView iv_gridimageview = (ImageView) view.findViewById(R.id.iv_imageview);						options = new DisplayImageOptions.Builder()              .showImageForEmptyUri(null)  				// 设置图片Uri为空或是错误的时候显示的图片              .showImageOnFail(null)       				// 设置图片加载或解码过程中发生错误显示的图片                  .cacheInMemory(true)                        // 设置下载的图片是否缓存在内存中              .cacheOnDisc(true)                          // 设置下载的图片是否缓存在SD卡中              .displayer(new RoundedBitmapDisplayer(10))  // 设置成圆角图片              .build();		 imageLoader.init(ImageLoaderConfiguration.createDefault(ImageDetailActivity.this));		 imageLoader.displayImage(imageUrl, iv_gridimageview, options);		 container.addView(view);		 		return view;		}		@Override		public int getCount()		{			return list.size();		}		@Override		public boolean isViewFromObject(View arg0, Object arg1)		{			return arg0 == arg1;		}		@Override		public void destroyItem(ViewGroup container, int position, Object object)		{			View view = (View) object;			container.removeView(view);		}	}							@Override	public void onPageScrollStateChanged(int arg0)	{		// TODO Auto-generated method stub			}	@Override	public void onPageScrolled(int arg0, float arg1, int arg2)	{		// TODO Auto-generated method stub			}	@Override	public void onPageSelected(int arg0)	{		// TODO Auto-generated method stub		currentPosition = arg0;		pageText.setText((currentPosition + 1) + "/" + list.size());		viewPager.setCurrentItem(arg0);	}		}